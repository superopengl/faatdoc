swagger: "2.0"
info:
  description: AUA backend API
  version: "1.0.0"
  title: "AUA API"
basePath: "/api/v1"
schemes:
  - http
  - https
definitions:
  PingResponse:
    type: "object"
paths:
  /contact:
    post:
      operationId: saveContact
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /file/download/{id}:
    get:
      operationId: downloadFile
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /file/search:
    post:
      operationId: searchFileList
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /file/{id}:
    get:
      operationId: getFile
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    post:
      operationId: uploadFile
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /auth/login:
    post:
      operationId: login
      # security:
      # - authAnyRole: []
      #   - business: []
      #   - individual: []
      #   - admin: []
      responses:
        200:
          description: OK
  /auth/logout:
    post:
      operationId: logout
      # security:
      #   - authAnyRole: []
      # security:
      #   - business: []
      #   - individual: []
      #   - admin: []
      responses:
        200:
          description: OK
  /auth/forgot_password:
    post:
      operationId: forgotPassword
      # security:
      #   - authAnyRole: []
      responses:
        200:
          description: OK
  /auth/reset_password:
    post:
      operationId: resetPassword
      # security:
      #   - authAnyRole: []
      responses:
        200:
          description: OK
  /auth/reset_password/{token}:
    get:
      operationId: retrievePassword
      # security:
      #   - authAnyRole: []
      parameters:
        - name: token
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /auth/signup:
    post:
      operationId: signup
      # security:
      #   - authAnyRole: []
      responses:
        200:
          description: OK
  /auth/user:
    get:
      operationId: getAuthUser
      responses:
        200:
          description: OK
  /user:
    get:
      operationId: listClients
      # security:
      #   - authAdminOrAgent: []
      responses:
        200:
          description: OK
  /user/agent:
    get:
      operationId: listAgents
      # security:
      #   - authAdminOrAgent: []
      responses:
        200:
          description: OK
  /user/profile:
    post:
      operationId: updateProfile
      responses:
        200:
          description: OK
    get:
      operationId: getProfile
      responses:
        200:
          description: OK
  /user/change_password:
    post:
      operationId: changePassword
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /job_template:
    post:
      operationId: saveJobTemplate
      # security:
      #   - authAdmin: []
      responses:
        200:
          description: OK
    get:
      operationId: listJobTemplates
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /job_template/{id}:
    get:
      operationId: getJobTemplate
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteJobTemplate
      # security:
      #   - authAdmin: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /portofolio:
    post:
      operationId: savePortofolio
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
    get:
      operationId: listPortofolio
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
  /portofolio/{id}:
    get:
      operationId: getPortofolio
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deletePortofolio
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /lodgement:
    post:
      operationId: saveLodgement
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
    get:
      operationId: listLodgement
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /lodgement/search:
    post:
      operationId: searchLodgement
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /lodgement/generate:
    post:
      operationId: generateLodgement
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
  /lodgement/{id}:
    get:
      operationId: getLodgement
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteLodgement
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /lodgement/{id}/sign:
    post:
      operationId: signLodgement
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /lodgement/{id}/assign:
    post:
      operationId: assignLodgement
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /lodgement/{id}/message:
    get:
      operationId: listLodgementMessage
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    post:
      operationId: newLodgmentMessage
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /lodgement/{id}/complete:
    post:
      operationId: completeLodgement
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /recurring:
    get:
      operationId: listRecurring
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
    post:
      operationId: saveRecurring
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
  /recurring/:id:
    get:
      operationId: getRecurring
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteRecurring
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /recurring/:id/run:
    post:
      operationId: runRecurring
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /notification:
    get:
      operationId: listNotification
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
  /notification/count/unread:
    get:
      operationId: getNotificationUnreadCount
      responses:
        200:
          description: OK
  /notification/:id:
    get:
      operationId: getNotification
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
