swagger: "2.0"
info:
  description: AUA backend API
  version: "1.0.0"
  title: "AUA API"
basePath: "/api/v1"
schemes:
  - http
  - https
definitions:
  PingResponse:
    type: "object"
paths:
  /file/download/{id}:
    get:
      operationId: downloadFile
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /file/search:
    post:
      operationId: searchFileList
      responses:
        200:
          description: OK
  /file/{id}:
    get:
      operationId: getFile
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    post:
      operationId: uploadFile
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK

  /auth/login:
    post:
      operationId: login
      # security:
      #   - business: []
      #   - individual: []
      #   - admin: []
      responses:
        200:
          description: OK
  /auth/logout:
    post:
      operationId: logout
      # security:
      #   - business: []
      #   - individual: []
      #   - admin: []
      responses:
        200:
          description: OK
  /auth/forgot_password:
    post:
      operationId: forgotPassword
      responses:
        200:
          description: OK
  /auth/reset_password:
    post:
      operationId: resetPassword
      responses:
        200:
          description: OK
  /auth/reset_password/{token}:
    get:
      operationId: retrievePassword
      parameters:
        - name: token
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /auth/signup:
    post:
      operationId: signup
      responses:
        200:
          description: OK
  /auth/user:
    get:
      operationId: getAuthUser
      responses:
        200:
          description: OK               
  /user:
    get:
      operationId: listClients
      responses:
        200:
          description: OK
  /user/profile:
    post:
      operationId: updateProfile
      responses:
        200:
          description: OK
    get:
      operationId: getProfile
      responses:
        200:
          description: OK
  /user/change_password:
    post:
      operationId: changePassword
      responses:
        200:
          description: OK
  /job_template:
    post:
      operationId: saveJobTemplate
      responses:
        200:
          description: OK
    get:
      operationId: listJobTemplates
      responses:
        200:
          description: OK
  /job_template/{id}:
    get:
      operationId: getJobTemplate
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteJobTemplate
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /portofolio:
    post:
      operationId: savePortofolio
      responses:
        200:
          description: OK
    get:
      operationId: listPortofolio
      responses:
        200:
          description: OK
  /portofolio/{id}:
    get:
      operationId: getPortofolio
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deletePortofolio
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /lodgement:
    post:
      operationId: saveLodgement
      responses:
        200:
          description: OK
    get:
      operationId: listLodgement
      responses:
        200:
          description: OK
  /lodgement/generate:
    post:
      operationId: generateLodgement
      responses:
        200:
          description: OK
  /lodgement/{id}:
    get:
      operationId: getLodgement
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteLodgement
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
